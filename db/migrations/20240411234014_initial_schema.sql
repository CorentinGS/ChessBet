-- Create "tournaments" table
CREATE TABLE "tournaments" ("tournament_id" serial NOT NULL, "name" character varying(100) NOT NULL, "start_date" date NOT NULL, "end_date" date NOT NULL, PRIMARY KEY ("tournament_id"));
-- Create "matches" table
CREATE TABLE "matches" ("match_id" serial NOT NULL, "tournament_id" integer NULL, "player1" character varying(50) NOT NULL, "player2" character varying(50) NOT NULL, "win_probability_player1" double precision NOT NULL, "draw_probability" double precision NOT NULL, "win_probability_player2" double precision NOT NULL, "match_date" timestamp NOT NULL, PRIMARY KEY ("match_id"), CONSTRAINT "matches_tournament_id_fkey" FOREIGN KEY ("tournament_id") REFERENCES "tournaments" ("tournament_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create "users" table
CREATE TABLE "users" ("user_id" serial NOT NULL, "username" character varying(50) NOT NULL, "points" integer NOT NULL, "oauth_id" character varying(50) NULL, "email_address" character varying(100) NOT NULL, PRIMARY KEY ("user_id"), CONSTRAINT "users_email_address_key" UNIQUE ("email_address"), CONSTRAINT "users_oauth_id_key" UNIQUE ("oauth_id"), CONSTRAINT "users_username_key" UNIQUE ("username"), CONSTRAINT "users_points_check" CHECK (points >= 0));
-- Create "bets" table
CREATE TABLE "bets" ("bet_id" serial NOT NULL, "user_id" integer NULL, "match_id" integer NULL, "bet_points" integer NOT NULL, "bet_result" boolean NULL, PRIMARY KEY ("bet_id"), CONSTRAINT "one_bet_per_user_per_match" UNIQUE ("user_id", "match_id"), CONSTRAINT "bets_match_id_fkey" FOREIGN KEY ("match_id") REFERENCES "matches" ("match_id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "bets_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create "user_points_history" table
CREATE TABLE "user_points_history" ("transaction_id" serial NOT NULL, "user_id" integer NULL, "transaction_date" timestamp NOT NULL, "transaction_amount" integer NOT NULL, "remaining_points" integer NOT NULL, PRIMARY KEY ("transaction_id"), CONSTRAINT "user_points_history_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("user_id") ON UPDATE NO ACTION ON DELETE NO ACTION);
